@using MiniPos.ViewModels
@model CustomerViewModel

<div class="container" id="app">
    <div class="row">
        <div class="mb-3">
            <a class="btn" style=" float: right; background-color: #2F9FE1; width: 14%; height:100%; border-radius:0px 0px;" asp-controller="customers" asp-action="CreateCustomer" role="button">Add Customer</a>
        </div>
        <div>
            <form asp-action="Customers">
                <div class="input-group mb-3" style="width: 20%;  height:100%; float: right;">
                    <div >
                    <input name="term" class="form-control" placeholder="Search by name" style="border-radius:0px 0px;" />
                    </div>
                </div>
            </form>
        </div>
        <div>
            <table class="table table-striped table-bordered" id="user-table">
                <thead>
                    <tr>
                        @*<th v-for="col in userCols" :key="col">{{ col }}</th>*@
                        <th style="text-align: center;">
                            Customer Code
                        </th>
                        <th style="text-align: center;">
                            Customer Name
                        </th>
                        <th style="text-align: center;">
                            Town
                        </th>
                        <th style="text-align: center;">
                            Email
                        </th>
                        <th style="text-align: center;">
                            Number
                        </th>
                        <th style="width: 10%; text-align: center;">
                            Action
                        </th>
                    </tr>
                </thead>
                @foreach (var cus in @Model.Customers)
                {
                    <tr>
                        <td>
                            @cus.Code
                        </td>
                        <td>
                            @cus.Name
                        </td>
                        <td>
                            @cus.Town.Name
                        </td>
                        <td>
                            @cus.Email
                        </td>
                        <td>
                            @cus.MobileNo
                        </td>
                        <td style="width: 10%">
                            <div class="row form-group">
                                <div class="col" style="width: 30%;">
                                    @*<div class="row">*@
                                    <form asp-action="Delete" method="post" asp-controller="customers">
                                        <button class="btn" type="submit" asp-controller="Customers" asp-action="Delete" asp-route-Id="@cus.Id" onclick="return confirm('Delete Confirmation')">
                                            <i class="fa fa-trash-o" style="font-size:20px;color:red"></i>
                                        </button>
                                    </form>
                                    @*</div>*@
                                </div>
                                <div class="col" style="width: 70%;">
                                    @*<div class="row">*@
                                    <a class="btn" asp-controller="Customers" asp-action="Edit" asp-route-Id="@cus.Id">
                                        <i class="fa fa-solid fa-pencil" style="font-size:20px;color:green"></i>
                                    </a>
                                    @*</div>*@
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </table>
        </div>
        <nav>
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item ">
                        <a class="page-link" style="background-color: #2F9FE1; color: white; border-radius:0px 0px;" href="/Customers/Customers?term=@Model.Term&orderBy=@Model.OrderBy&currentPage=@(Model.CurrentPage-1)" tabindex="-1">Previous</a>
                    </li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                        <li class="page-item"><a class="page-link active" style="background-color: white; color: #797979; border-radius:0px 0px;" href="/Customers/Customers?term=@Model.Term&orderBy=@Model.OrderBy&currentPage=@i">@i</a></li>
                    }
                    else
                    {
                        <li class="page-item"><a class="page-link" style="background-color: #2F9FE1; color: white; border-radius:0px 0px;" href="/Customers/Customers?term=@Model.Term&orderBy=@Model.OrderBy&currentPage=@i">@i</a></li>
                    }
                }
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" style="background-color: #2F9FE1; color: white; border-radius:0px 0px;" href="/Customers/Customers?term=@Model.Term&orderBy=@Model.OrderBy&currentPage=@(Model.CurrentPage+1)">
                            Next
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<script>
    //    const pagination = Vue.component('pagination-control', {
    //  template: '#pagination',
    //  data() {
    //    return {};
    //  },
    //  props: {
    //    currentPage: {
    //      default: 1,
    //      required: true,
    //    },
    //    maxPages: {
    //      type: Number,
    //      default: 1,
    //      required: true,
    //    },
    //  },
    //});

    //const userTable = Vue.component('user-table', {
    //  template: '#user-table',
    //  components: { 'pagination-control': pagination },
    //  data() {
    //    return {
    //      baseUrl: '',
    //      page: 1,
    //      perPage: 4,
    //      totalPages: 0,
    //      users: [],
    //      userCols: ['Customer Code', 'Customer Name', 'Town', 'Email', 'Number', 'Action']
    //    };
    //  },
    //  computed: {
    //    resultIndexBeg() {
    //      // Don't do this
    //      return this.users.length > 0 ? this.users[0].id : 0;
    //    },
    //    resultIndexEnd() {
    //      // Don't do this
    //      return this.users.length > 0 ? this.users[this.users.length - 1].id : 0;
    //    },
    //  },
    //  methods: {
    //    getData() {
    //      try {
    //        fetch(`${this.baseUrl}?page=${this.page}&per_page=${this.perPage}`)
    //          .then((response) => response.json())
    //          .then((json) => {
    //          this.totalPages = json.total_pages;
    //          this.totalData = json.total;
    //          this.users = json.data;
    //        });
    //      }
    //      catch(err) {

    //      }

    //    },
    //    changePage(page) {
    //      this.page = page;
    //    },
    //  },
    //  watch: {
    //    page: {
    //      immediate: true,
    //      handler(newVal, oldVal) {
    //        this.getData();
    //      },
    //    },
    //  },
    //});

</script>